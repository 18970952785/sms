<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.malicn.server.dao.auth.AuthOwnerDao">
  <resultMap id="BaseResultMap" type="com.malicn.server.domain.auth.AuthOwner">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="auth_type" jdbcType="TINYINT" property="authType" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="personal_img" jdbcType="VARCHAR" property="personalImg" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_img" jdbcType="VARCHAR" property="companyImg" />
    <result column="audit_status" jdbcType="TINYINT" property="auditStatus" />
    <result column="audit_remark" jdbcType="VARCHAR" property="auditRemark" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <!-- 外加字段 -->
    <result column="mobile" property="mobile" />
  </resultMap>

  <!-- 全字段 -->
  <sql id="Base_Column_List">
    id, user_id, auth_type, real_name, id_card, personal_img, company_name, company_img, 
    audit_status, audit_remark, audit_time, create_time
  </sql>

  <sql id="Join_Base_Column_List">
    a.id, a.user_id, a.auth_type, a.real_name, a.id_card, a.personal_img, a.company_name,
    a.company_img, a.audit_status, a.audit_remark, a.audit_time, a.create_time
  </sql>

  <!-- 插入认证信息 -->
  <insert id="insert" parameterType="com.malicn.server.domain.auth.AuthOwner">
    insert into ml_auth_owner ( user_id, auth_type,
    real_name, id_card, personal_img,
    company_name, company_img, audit_status,
    create_time
    )
    values ( #{userId,jdbcType=BIGINT}, #{authType,jdbcType=TINYINT},
    #{realName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{personalImg,jdbcType=VARCHAR},
    #{companyName,jdbcType=VARCHAR}, #{companyImg,jdbcType=VARCHAR}, #{auditStatus,jdbcType=TINYINT},
    now()
    )
  </insert>


  <insert id="insertSelective" parameterType="com.malicn.server.domain.auth.AuthOwner" >
    insert into ml_auth_owner
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="personalImg != null" >
        personal_img,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="companyImg != null" >
        company_img,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="auditRemark != null" >
        audit_remark,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=TINYINT},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="personalImg != null" >
        #{personalImg,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyImg != null" >
        #{companyImg,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="auditRemark != null" >
        #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.malicn.server.domain.auth.AuthOwner" >
    update ml_auth_owner
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="authType != null" >
        auth_type = #{authType,jdbcType=TINYINT},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="personalImg != null" >
        personal_img = #{personalImg,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyImg != null" >
        company_img = #{companyImg,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="auditRemark != null" >
        audit_remark = #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 获取货主最新认证信息 -->
  <select id="getAuthingByType" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ml_auth_owner
    where user_id = #{userId} and auth_type = #{authType}
    and audit_status !=3 ORDER  by create_time desc limit 1
  </select>

  <!-- 获取认证通过和不通过的认证数据 -->
  <select id="getAuthByType" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ml_auth_owner
    where user_id = #{userId} and auth_type = #{authType}
    and audit_status IN(1,2) ORDER  by create_time desc limit 1
  </select>

  <!-- 废弃认证信息 -->
  <update id="abandonAuthOwner" parameterType="java.lang.Long">
    UPDATE  ml_auth_owner set audit_status =3 where id = #{id}
  </update>



  <!-- ========================== cms 1.4.0 ============================ -->
  <!-- 待审核的货主列表 -->
  <select id="getAuthOwnerByParams" resultMap="BaseResultMap">
    SELECT <include refid="Join_Base_Column_List" />, b.mobile
    FROM ml_auth_owner a
    LEFT JOIN ml_user_base b
    ON a.user_id = b.user_id
    WHERE a.audit_status = 0
    <if test="auditType != null and auditType != '' and auditType != 0">
      AND a.auth_type = #{auditType}
    </if>
    <if test="realName != null and realName !=''">
      AND LOCATE(#{realName}, a.real_name) > 0
    </if>
    <if test="companyName != null and companyName != ''">
      AND LOCATE(#{companyName}, a.company_name) > 0
    </if>
    <if test="mobile != null and mobile != ''">
      AND LOCATE(#{mobile}, b.mobile) > 0
    </if>
    ORDER BY a.create_time ASC
  </select>
  <select id="getAuthOwnerByOwnerId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT <include refid="Join_Base_Column_List" />, b.mobile
    FROM ml_auth_owner a
    LEFT JOIN ml_user_base b
    ON a.user_id = b.user_id
    WHERE a.user_id = #{userId}
    AND a.audit_status != 0
    ORDER BY a.audit_time DESC
  </select>

  <select id="getAuthOwnerById" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT <include refid="Join_Base_Column_List" />, b.mobile
    FROM ml_auth_owner a
    LEFT JOIN ml_user_base b
    ON a.user_id = b.user_id
    WHERE a.id = #{auditId}
  </select>

  <update id="updateAuditStatus">
    UPDATE ml_auth_owner
    SET audit_status = #{auditStatus},
    audit_remark = #{auditRemark},
    audit_time = now()
    WHERE id = #{auditId}
  </update>
</mapper>