<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.malicn.server.dao.user.UserBaseDao">
  <resultMap id="UserBaseMap" type="com.malicn.server.domain.user.UserBase">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="reg_from" jdbcType="TINYINT" property="regFrom" />
    <result column="device_os" jdbcType="TINYINT" property="deviceOs" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="device_type" jdbcType="VARCHAR" property="deviceType" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="TINYINT" property="status"/>
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, mobile, email, reg_from, device_os, device_id, device_type, last_login_time,
    status, salt, create_time, update_time
  </sql>

  <insert id="insert" parameterType="com.malicn.server.domain.user.UserBase">
    insert into ml_user_base (user_id, user_name, password, 
      mobile, email,
      last_login_time,
      salt, create_time, update_time
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{lastLoginTime,jdbcType=TIMESTAMP},
      #{salt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="userId" parameterType="com.malicn.server.domain.user.UserBase">
    insert into ml_user_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="regFrom != null">
        reg_from,
      </if>
      <if test="deviceOs != null">
        device_os,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>

      <if test="salt != null">
        salt,
      </if>
        last_login_time,
        create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="regFrom != null">
        #{regFrom,jdbcType=TINYINT},
      </if>
      <if test="deviceOs != null">
        #{deviceOs,jdbcType=TINYINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
        now(),
      <choose>
        <when test="createTime != null">
          #{createTime,jdbcType=TIMESTAMP}
        </when>
        <otherwise>
          now()
        </otherwise>
      </choose>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.malicn.server.domain.user.UserBase">
    update ml_user_base
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="regFrom != null">
        reg_from = #{regFrom,jdbcType=TINYINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.malicn.server.domain.user.UserBase">
    update ml_user_base
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      salt = #{salt,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


  <!-- ************************************分割线 以下是自己写的方法 ********************************-->
  <!-- 根据电话号码查询用户信息 -->
  <select id="selectByMobile" resultMap="UserBaseMap" parameterType="java.lang.String">
      select  <include refid="Base_Column_List" />
      from ml_user_base where mobile=#{mobile}
  </select>
  <!-- 更新最后登录时间 -->
  <update id="updateLastLoginTime" parameterType="java.lang.String">
      update ml_user_base set last_login_time=now() where mobile=#{mobile}
  </update>

  <!-- 根据ID更换我的信息 -->
  <update id="updateMyInfoById">
      update ml_user_base set head_img=#{headImg} where user_id=#{userId}
  </update>

  <!-- 忘记密码的修改密码 -->
  <update id="updatePwdByMobile">
      update ml_user_base set password=#{newPwd},salt=#{salt} where mobile=#{mobile}
  </update>

  <!-- 根据已知的密码修改密码 -->
  <update id="updatePwdByUserId">
      update ml_user_base set  password=#{newPwd},salt=#{salt} where user_id=#{userId}
  </update>

  <!-- 根据userId查询我的信息 -->
  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="UserBaseMap">
      SELECT <include refid="Base_Column_List" />
      FROM ml_user_base
      WHERE user_id=#{userId}
  </select>

  <!-- 根据userId 查询密码 -->
  <select id="selectPwdSaltById" parameterType="java.lang.Long" resultMap="UserBaseMap">
      select password,salt from ml_user_base where user_id=#{userId}
  </select>

  <!-- 修改用户手机号码 -->
  <update id="updateMobileByUserId">
      update ml_user_base set mobile=#{newMobile} where user_id=#{userId}
  </update>

  <select id="getUserBaseMapByList"  resultMap="UserBaseMap"  parameterType="java.util.List">
    select
    <include refid="Base_Column_List"/>
    from  ml_user_base
    where user_id in
    <foreach item="item" collection="list" open="(" separator="," close=")">
      <if test="item.userId!=null and item.userId!=''">
        #{item.userId}
      </if>
    </foreach>
  </select>

  <select id="getMapByOrderOwners"  resultMap="UserBaseMap"  parameterType="java.util.List">
    select
    <include refid="Base_Column_List"/>
    from  ml_user_base
    where user_id in
    <foreach item="item" collection="list" open="(" separator="," close=")">
      <if test="item.ownerId!=null and item.ownerId!=''">
        #{item.ownerId}
      </if>
    </foreach>
  </select>
  <select id="dimSelectByMobile" resultMap="UserBaseMap">
    SELECT <include refid="Base_Column_List" />
    FROM ml_user_base
    WHERE LOCATE(#{mobile}, mobile) > 0
  </select>

</mapper>